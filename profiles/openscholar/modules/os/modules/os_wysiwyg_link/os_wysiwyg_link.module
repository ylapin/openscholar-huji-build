<?php

/**
 * Implements hook_menu().
 */
function os_wysiwyg_link_menu() {
  $items = array();

  $items['os/wysiwyg/link/insert'] = array(
    'title' => 'Insert Link',
    'access arguments' => array('insert link into wysiwyg'),
    'page callback' => 'os_wysiwyg_link_insert',
    'file' => 'os_wysiwyg_link.insert.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_wysiwyg_include_directory().
 */
function os_wysiwyg_link_wysiwyg_include_directory($type) {
  switch ($type) {
    case 'plugins':
      return 'wysiwyg_plugins';
  }
}

/**
 * Helper function; Return media browser plugins.
 */
function os_wysiwyg_link_get_media_browser_plugins() {
  return array();
}

/**
 * Helper function; Return media browser types.
 */
function os_wysiwyg_link_get_media_browser_types() {
  return array();
}

/**
 * Implements hook_permission().
 */
function os_wysiwyg_link_permission() {
  $perms = array();

  $perms['insert link into wysiwyg'] = array(
    'title' => 'Insert a link into the Wysiwyg',
    'description' => 'Insert a link into the wysiwyg'
  );

  return $perms;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function os_wysiwyg_link_form_file_entity_add_upload_alter(&$form, &$form_state) {
  $args = $form_state['build_info']['args'][0];
  if (!empty($args['no_redirect'])) {
    // Add a submit handler to prevent redirection.
    $form['#submit'][] = 'os_wysiwyg_link_add_upload_submit';
  }
}

/**
 * Submit handler; Prevent redirection after file upload.
 */
function os_wysiwyg_link_add_upload_submit($form, &$form_state) {
  $form_state['no_redirect'] = TRUE;
}

/**
 * Implements hook_filter_info().
 */
function os_wysiwyg_link_filter_info() {
  $filters['owl_filter'] = array(
    'title' => t('Convert File links to correct path'),
    'description' => t('This filter will convert the paths of links to files to ensure they\'re always correct.'),
    'process callback' => 'os_wysiwyg_link_filter',
    'weight' => 1,
  );

  return $filters;
}

/**
 * Helper function; Replace html links with drupal links in a given string.
 */
function os_wysiwyg_link_filter($text) {
  // Find all html links.
  $matches = _os_wysiwyg_link_find_links($text);

  foreach ($matches as $m) {
    switch ($m[2]) {
      case 'fid':
        $file = file_load($m[3]);
        if (isset($file->uri)) {
          $link = str_replace($m[1], file_create_url($file->uri), $m[0]);
          $text = str_replace($m[0], $link, $text);
        }
        break;

      case 'url':
        $comps = parse_url($m[3]);
        $options = array();
        // set defaults so no notices appear
        if ($comps) {
          $comps += array('query' => '', 'fragment' => '');
          $page = str_replace(array('?'.$comps['query'], '#'.$comps['fragment']), '', $m[3]);
          // query string is in var=val&var=val format. parse it into an array for drupal
          parse_str($comps['query'], $query);
          $options = array(
            'query' => $query,
            'fragment' => $comps['fragment']
          );
        }
        else {
          $page = $m[3];
        }
        if (url_is_external($page)) {
          $url = url($page, $options + array('external' => TRUE));
        }
        elseif ($page) {
          $url = url($page, $options + array('absolute' => TRUE));
        }
        // if page is blank, the url is #something, linking to an anchor on the same page
        // we use the external flag to prevent drupal from changing it to the site's frontpage
        else {
          $url = url($page, $options + array('external' => TRUE));
        }
        $link = str_replace('href="'.$m[1], 'href="'.$url, $m[0]);
        $text = str_replace($m[0], $link, $text);
        break;
    }
  }

  return $text;
}

/**
 * Helper function; Find html links in a given string.
 */
function _os_wysiwyg_link_find_links($str) {
  $matches = array();
  preg_match_all('~<a[^>]+href="([^"]+)"[^>]+data-(fid|url)="([^"]*)">~', $str, $matches, PREG_SET_ORDER);
  return $matches;
}
