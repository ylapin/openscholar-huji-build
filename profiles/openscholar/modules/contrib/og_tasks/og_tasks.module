<?php
/**
 * @file
 * Main module file for the og_tasks module.
 */

define('OG_TASKS_COMPLETED', 'completed');
define('OG_TASKS_REQUIRED', 'required');
define('OG_TASKS_OPTIONAL', 'optional');

/**
 * Implementation of hook_menu().
 */
function og_tasks_menu() {
  $items = array();

  $items['group/%/%/admin/tasks'] = array(
    'title' => 'Group tasks',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('og_tasks_form', 1, 2),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/admin.inc',
    'weight' => 5,
    'access callback' => 'og_user_access',
    'access arguments' => array(1, 2, 'run og tasks'),
  );

  return $items;
}

/**
 * Implement hook_og_permission().
 */
function og_tasks_og_permission() {
  $items = array();

  $items['run og tasks'] = array(
    'title' => t('Run group tasks'),
    'description' => t("Perform tasks for the group."),
    'default role' => array(OG_ADMINISTRATOR_ROLE),
  );

  return $items;
}

/**
 * Implementation of hook_og_ui_get_group_admin()
 */
function og_tasks_og_ui_get_group_admin($entity_type, $entity) {
  $items = array();

  if (!og_user_access($entity_type, $entity, 'run og tasks')) {
    return;
  }

  $items['tasks'] = array(
    'title' => t('Tasks'),
    'description' => t('Common tasks to be run for this group.'),
    'href' => 'admin/tasks',
  );

  return $items;
}

/**
 * Return a list of tasks for the given group.
 */
function og_tasks_get_tasks($entity_type, $entity) {
  $tasks = array();
  $info = module_invoke_all('og_tasks_info', $entity_type, $entity);
  // Integrates with spaces og presets.
  if (module_exists('spaces')) {
    $preset_tasks = array();
    if ($entity->spaces_preset_og) {
      $preset = spaces_preset_load($entity->spaces_preset_og, 'og');
      if (isset($preset->value['og_tasks'])) {
        $preset_tasks = $preset->value['og_tasks'];
      }
    }
  }
  foreach ($info as $key => $task) {
    if (module_exists('spaces')) {
      if (!in_array($key, $preset_tasks)) {
        continue;
      }
      else {
        $task->required = TRUE;
      }
    }
    if (is_a($task, 'og_task')) {
      $task->key = $key;
      $tasks[$key] = $task;
    }
  }
  return $tasks;
}

/**
 * Implements hook_admin_paths().
 */
function og_tasks_admin_paths() {
  return array(
    'group/*/*/admin/*' => TRUE,
  );
}

/**
 * Implements hook_entity_insert().
 */
function og_tasks_entity_insert($entity, $type) {
  if (!og_is_group($type, $entity)) {
    return;
  }

  // Get all required tasks for the attached entity.
  $tasks = array();
  $attached_entity = clone $entity;
  $all_tasks = og_tasks_get_tasks($type, $attached_entity);
  foreach ($all_tasks as $key => $task) {
    if ($task->required) {
      $tasks[$key] = $task;
    }
  }

  if (!empty($tasks)) {
    module_load_include('inc', 'og_tasks', 'includes/admin');
    $batch = og_tasks_get_batch($attached_entity, $tasks);
    batch_set($batch);
  }
}
