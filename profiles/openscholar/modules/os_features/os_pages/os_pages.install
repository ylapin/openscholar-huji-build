<?php

/**
 * Updates all pages_pages contexts to individual page contexts
 */
function os_pages_update_7001(&$sandbox) {
  $q = db_select('spaces_overrides', 'so')
       ->fields('so')
       ->condition('object_id', 'pages_pages:reaction:block')
       ->execute();

  $default = os_pages_context_custom('os_pages-page-1');

  foreach ($q as $r) {
    $group = $r->id;
    $q2 = db_select('node', 'n')
          ->fields('n', array('nid'))
          ->condition('n.type', 'page');
    $q2->join('og_membership', 'ogm', 'ogm.etid = n.nid AND ogm.entity_type =\'node\'');
    $q2->condition('ogm.gid', $group);

    $q2 = $q2->execute();
    foreach ($q2 as $n) {
      $ctx_name = 'os_pages-page-'.$n->nid;
      $ctx = clone $r;
      $ctx->object_id = $ctx_name.':reaction:block';
      $ctx->value = unserialize($ctx->value);
      $ctx->value['blocks'] = array_merge($ctx->value['blocks'], $default->reactions['block']['blocks']);
      drupal_write_record('spaces_overrides', $ctx);
    }
  }

  db_delete('spaces_overrides')
  ->condition('object_id', 'pages_pages:reaction:block')
  ->execute();
}

function os_pages_update_7002(&$sandbox) {
  $q = db_select('spaces_overrides', 'so')
       ->fields('so')
       ->condition('object_id', 'os_pages-page-%', 'LIKE')
       ->execute();

  $default = os_pages_context_custom('os_pages-page-1');

  foreach ($q as $r) {
    $r->value = unserialize($r->value);
    $r->value['blocks'] = array_merge($r->value['blocks'], $default->reactions['block']['blocks']);
    drupal_write_record('spaces_overrides', $r, array('type', 'id', 'object_type', 'object_id'));
  }
}

/**
 * Prevents existing sections from having their navs moved
 */
function os_pages_update_7003(&$sb) {
  $sections = os_pages_get_sections();

  foreach ($sections as $s) {
    $exists = db_select('spaces_overrides', 'so')
      ->condition('object_id', 'os_pages-section-'.$s['bid'].':reaction:block')
      ->countQuery()
      ->execute()
      ->fetchField();

    if (!$exists) {
      $override = context_load('os_pages-section-'.$s['bid']);
      $override->reactions['block']['blocks']['boxes-os_pages_section_nav']['region'] = 'sidebar_second';

      $groups = og_get_entity_groups('node', $s['bid']);
      $group = reset($groups['node']);

      $data = (object)array(
        'type' => 'og',
        'id' => $group,
        'object_type' => 'context',
        'object_id' => 'os_pages-section-'.$s['bid'].':reaction:block',
        'value' => $override->reactions['block']
      );

      drupal_write_record('spaces_overrides', $data);
    }
  }
}

/**
 * Revert fields
 */
function os_pages_update_7004() {
  features_revert(array('os_pages' => array('field_instance')));
}

/**
 * Features revert and variable set for new Meta Description (summary) field.
 */
function os_pages_update_7005() {
  // Revert for new field using features API.
  $revert = array(
    'os_pages' => array(
      'field_base',
      'field_instance',
    ),
  );
  features_revert($revert);

  // "Revert" just one variable value using variable API.
  $name = 'nodeformscols_field_placements_page_default';
  $value = variable_get($name, array());
  $value['os_advanced'] = array(
    'region' => 'right',
    'weight' => '7',
    'has_required' => FALSE,
    'title' => 'Advanced options',
    'collapsed' => 1,
    'hidden' => 0,
  );
  variable_set($name, $value);
}
